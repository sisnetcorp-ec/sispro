<?php
/* CbPlus */
/*

*/
 namespace MincDev\OtpAuth; use DateTimeInterface; use Com\Tecnick\Barcode\Barcode; use MincDev\OtpAuth\OtpAuthInterface; class OtpAuthenticator implements OtpAuthInterface { private $codeLength; private $secretLength; private $pinModulo; private $instanceTime; private $validFor; private $periodSize = 30; public function __construct(int $codeLength = 6, int $secretLength = 10, ?\DateTimeInterface $instanceTime = null, int $validFor = 30) { goto qXEvZyitCKRG; rrAoYJrp7Onn: $this->instanceTime = $instanceTime ?? new \DateTimeImmutable(); goto njuuBs9JN6Bc; qXEvZyitCKRG: $this->codeLength = $codeLength; goto cePNQmHf7fqR; HB0y4w9gl4nj: $this->validFor = $validFor; goto MDj4395Rj9wN; cePNQmHf7fqR: $this->secretLength = $secretLength; goto HB0y4w9gl4nj; Hrdr8q30SYPS: $this->pinModulo = 10 ** $codeLength; goto rrAoYJrp7Onn; MDj4395Rj9wN: $this->periodSize = $validFor < $this->periodSize ? $validFor : $this->periodSize; goto Hrdr8q30SYPS; njuuBs9JN6Bc: } public function validate(string $secret, string $code) : bool { goto XYERzjQD3PrI; Bs92ajaK7Uir: return $result > 0; goto NlgXYYWLzEit; ZpWrhutvsbfj: $result = hash_equals($this->getCode($secret, $dateTime), $code) ? $dateTime->getTimestamp() : $result; goto oetmsYYgoBDO; He50X5q0u6LD: $result = 0; goto kcRtcO0ZkFM7; oetmsYYgoBDO: esE6JJ5GgwBx: goto jJHdpABQQW4N; gPyE92KljcBa: qB_NHSIy8Tz_: goto Bs92ajaK7Uir; jJHdpABQQW4N: ++$i; goto to8TpyjibKTf; to8TpyjibKTf: goto DtFnwbJC9BZ2; goto gPyE92KljcBa; gxDmk8OSeHXa: if (!($i < $periods)) { goto qB_NHSIy8Tz_; } goto bZp33N35FzFz; bZp33N35FzFz: $dateTime = new \DateTimeImmutable("\x40" . ($this->instanceTime->getTimestamp() - $i * $this->periodSize)); goto ZpWrhutvsbfj; kcRtcO0ZkFM7: $i = 0; goto WWeHycOMmc6I; WWeHycOMmc6I: DtFnwbJC9BZ2: goto gxDmk8OSeHXa; XYERzjQD3PrI: $periods = floor($this->validFor / $this->periodSize); goto He50X5q0u6LD; NlgXYYWLzEit: } public function getCode(string $secret, ?DateTimeInterface $time = null) : string { goto jZsaD3fYj0xT; TMcTqE42XONk: return str_pad((string) ($truncatedHash % $this->pinModulo), $this->codeLength, "\x30", \STR_PAD_LEFT); goto ZydgoaOdGz3c; zmQvVYoQR7zS: jIy1tr7XDi7d: goto SYJCwLSax0t4; DEhh18p6mpfG: $time = $this->instanceTime; goto zmQvVYoQR7zS; weNwEPKOE5f2: $offset &= 0xf; goto P_oQorS4USQD; DAhVXIF8lSkP: $offset = \ord(substr($hash, -1)); goto weNwEPKOE5f2; P_oQorS4USQD: $truncatedHash = $this->hashToInt($hash, $offset) & 0x7fffffff; goto TMcTqE42XONk; jZsaD3fYj0xT: if (!(null === $time)) { goto jIy1tr7XDi7d; } goto DEhh18p6mpfG; WcdgVat8Ee6g: $secret = $base32->decode($secret); goto KUoQSGQwuFx5; KUoQSGQwuFx5: $timeForCode = str_pad(pack("\x4e", $timeForCode), 8, \chr(0), \STR_PAD_LEFT); goto LVKCorEKazR6; LVKCorEKazR6: $hash = hash_hmac("\163\150\x61\x31", $timeForCode, $secret, true); goto DAhVXIF8lSkP; SYJCwLSax0t4: $timeForCode = floor($time->getTimestamp() / $this->periodSize); goto oeCjLJTgkQMC; oeCjLJTgkQMC: $base32 = new FixedBitNotation(5, "\101\102\103\x44\105\106\107\x48\111\112\113\114\x4d\x4e\x4f\x50\121\122\123\124\125\x56\x57\x58\x59\x5a\62\x33\x34\65\x36\67", true, true); goto WcdgVat8Ee6g; ZydgoaOdGz3c: } public function newSecret() : string { return (new FixedBitNotation(5, "\x41\x42\x43\104\105\106\x47\110\111\x4a\113\114\x4d\116\117\x50\121\122\123\124\125\126\x57\130\131\132\62\x33\x34\x35\x36\x37", true, true))->encode(random_bytes($this->secretLength)); } private function hashToInt(string $bytes, int $start) : int { return unpack("\x4e", substr(substr($bytes, $start), 0, 4))[1]; } public function getQR(string $accountName, string $issuer, string $secret) : string { goto MfQo8xHeh66f; HkH0z3ijt_Yz: $otpauthString = "\x6f\164\160\141\165\x74\150\72\x2f\57\164\x6f\x74\x70\x2f\45\x73\77\x73\145\x63\162\x65\x74\75\45\x73"; goto kMPwRpjqLEAu; SUQuhl_3HUTR: if (!('' === $secret)) { goto wfNZafpsUyt_; } goto Put6iWNZFTZ2; pDEcM6amcc8n: $label = $issuer . "\72" . $label; goto bOxEmn1yfiF4; SAXbkRaMJJW7: wfNZafpsUyt_: goto ebf3qcdUSTSR; aUu6zoXgmAuR: return base64_encode($qrCode->getPngData()); goto sJpI1xFNQt8O; bOxEmn1yfiF4: $otpauthString .= "\46\151\x73\x73\165\145\x72\75\x25\x73"; goto oAdxQdKBYkz0; oAdxQdKBYkz0: r5cGUKMGXODN: goto E04FHyvU92HW; kMPwRpjqLEAu: if (!(null !== $issuer)) { goto r5cGUKMGXODN; } goto UnE7qWyPs7ME; OM7O5V0AGnnL: $barcode = new Barcode(); goto qL22ioE3HhZ4; VZwDzHm4GMYC: throw OtpAuthException::InvalidAccountName($accountName); goto dImCZZqaTuEX; qL22ioE3HhZ4: $qrCode = $barcode->getBarcodeObj("\x51\x52\103\x4f\104\105\54\110", $otpauthString, 200, 200, "\142\x6c\x61\143\153", [0, 0, 0, 0])->setBackgroundColor("\167\x68\151\164\145"); goto aUu6zoXgmAuR; YqwxysJDvzmj: throw OtpAuthException::InvalidIssuer($issuer); goto QK4jwoYg_rUo; dImCZZqaTuEX: Sm4W7LpA_mdH: goto SUQuhl_3HUTR; E04FHyvU92HW: $otpauthString = sprintf($otpauthString, $label, $secret, $issuer); goto OM7O5V0AGnnL; MfQo8xHeh66f: if (!('' === $accountName || false !== strpos($accountName, "\x3a"))) { goto Sm4W7LpA_mdH; } goto VZwDzHm4GMYC; Put6iWNZFTZ2: throw OtpAuthException::InvalidSecret(); goto SAXbkRaMJJW7; QK4jwoYg_rUo: FDlEW0p66e6J: goto pDEcM6amcc8n; UnE7qWyPs7ME: if (!('' === $issuer || false !== strpos($issuer, "\72"))) { goto FDlEW0p66e6J; } goto YqwxysJDvzmj; ebf3qcdUSTSR: $label = $accountName; goto HkH0z3ijt_Yz; sJpI1xFNQt8O: } }
