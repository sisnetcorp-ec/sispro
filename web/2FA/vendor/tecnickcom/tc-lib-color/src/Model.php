<?php
/* CbPlus */
/*

*/
 namespace Com\Tecnick\Color; abstract class Model { protected $type; protected $cmp_alpha = 1.0; public abstract function toRgbArray(); public function __construct($components) { foreach ($components as $color => $value) { goto ALsPF_IFA15o; rVsmm3s326Ve: PqkLdqEmW1RZ: goto Fo3HZdKvDIxX; rM8euHymgbVB: QF0QJyzg6bGd: goto rVsmm3s326Ve; ALsPF_IFA15o: $property = "\143\155\x70\x5f" . $color; goto UI_YBioDYCKd; UI_YBioDYCKd: if (!property_exists($this, $property)) { goto QF0QJyzg6bGd; } goto rojBB2QT8wAy; rojBB2QT8wAy: $this->{$property} = max(0, min(1, floatval($value))); goto rM8euHymgbVB; Fo3HZdKvDIxX: } G3_noIAiOXjh: } public function getType() { return $this->type; } public function getNormalizedValue($value, $max) { return round(max(0, min($max, $max * floatval($value)))); } public function getHexValue($value, $max) { return sprintf("\x25\x30\62\x78", $this->getNormalizedValue($value, $max)); } public function getRgbaHexColor() { $rgba = $this->toRgbArray(); return "\x23" . $this->getHexValue($rgba["\x72\145\144"], 255) . $this->getHexValue($rgba["\x67\x72\145\145\156"], 255) . $this->getHexValue($rgba["\x62\154\165\x65"], 255) . $this->getHexValue($rgba["\x61\154\160\150\141"], 255); } public function getRgbHexColor() { $rgba = $this->toRgbArray(); return "\x23" . $this->getHexValue($rgba["\162\145\x64"], 255) . $this->getHexValue($rgba["\x67\x72\145\145\156"], 255) . $this->getHexValue($rgba["\142\x6c\165\145"], 255); } }
