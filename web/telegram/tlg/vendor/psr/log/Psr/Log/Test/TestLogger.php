<?php
/* CbPlus */
/*

*/
 namespace Psr\Log\Test; use Psr\Log\AbstractLogger; class TestLogger extends AbstractLogger { public $records = []; public $recordsByLevel = []; public function log($level, $message, array $context = []) { goto GztYFGyxiaId; GztYFGyxiaId: $record = ["\x6c\145\x76\145\x6c" => $level, "\155\x65\163\x73\141\147\x65" => $message, "\143\157\x6e\x74\x65\170\164" => $context]; goto LTfZg4Talbi0; yMvArIn81Mri: $this->records[] = $record; goto NZglxF6y_8Mm; LTfZg4Talbi0: $this->recordsByLevel[$record["\x6c\x65\166\x65\x6c"]][] = $record; goto yMvArIn81Mri; NZglxF6y_8Mm: } public function hasRecords($level) { return isset($this->recordsByLevel[$level]); } public function hasRecord($record, $level) { goto BVuxas52zmpp; BVuxas52zmpp: if (!is_string($record)) { goto W0xlb3DCX0Sh; } goto sNQI6mcnm79_; ygbi0H0ld6bg: W0xlb3DCX0Sh: goto OF9d8CSlcZHs; OF9d8CSlcZHs: return $this->hasRecordThatPasses(function ($rec) use($record) { goto OplxETZRjNDb; WKIJX2A2rn13: sFe3tQr7mUgy: goto pFLO2uo2ofaG; JYO5JYoRbkqt: FgbrL0gcTFuP: goto UDL0AkPkHpIL; OplxETZRjNDb: if (!($rec["\x6d\x65\163\163\x61\x67\145"] !== $record["\155\145\163\163\141\x67\x65"])) { goto FgbrL0gcTFuP; } goto doiVbgb3w8AL; pFLO2uo2ofaG: return true; goto TwuamHgvaQCq; UDL0AkPkHpIL: if (!(isset($record["\143\x6f\x6e\164\145\170\164"]) && $rec["\143\x6f\156\164\x65\x78\x74"] !== $record["\143\157\x6e\164\x65\x78\164"])) { goto sFe3tQr7mUgy; } goto abYz3zmxM_rW; abYz3zmxM_rW: return false; goto WKIJX2A2rn13; doiVbgb3w8AL: return false; goto JYO5JYoRbkqt; TwuamHgvaQCq: }, $level); goto ubSi8PQggTHH; sNQI6mcnm79_: $record = ["\x6d\x65\163\x73\141\147\145" => $record]; goto ygbi0H0ld6bg; ubSi8PQggTHH: } public function hasRecordThatContains($message, $level) { return $this->hasRecordThatPasses(function ($rec) use($message) { return strpos($rec["\155\x65\x73\163\141\147\x65"], $message) !== false; }, $level); } public function hasRecordThatMatches($regex, $level) { return $this->hasRecordThatPasses(function ($rec) use($regex) { return preg_match($regex, $rec["\x6d\x65\x73\x73\x61\x67\x65"]) > 0; }, $level); } public function hasRecordThatPasses(callable $predicate, $level) { goto TGXjTKt6x8_y; HfaU4vq3uuZN: return false; goto GhMNenelwHWV; UGlYcqZysUbm: hUAlSOgPebVq: goto pBNY0YjZ3ZdH; TGXjTKt6x8_y: if (isset($this->recordsByLevel[$level])) { goto cA0yjpGQfBTJ; } goto HfaU4vq3uuZN; WB70SbOEKF9Y: foreach ($this->recordsByLevel[$level] as $i => $rec) { goto rZBq600OTJ04; Ow02KUl9EbKr: return true; goto egr0tG1hcl7k; egr0tG1hcl7k: KK8W3gr9ebHJ: goto I0VQkgHhRpeQ; rZBq600OTJ04: if (!call_user_func($predicate, $rec, $i)) { goto KK8W3gr9ebHJ; } goto Ow02KUl9EbKr; I0VQkgHhRpeQ: rcHEe03k4phY: goto VoRv7YMDXYFh; VoRv7YMDXYFh: } goto UGlYcqZysUbm; GhMNenelwHWV: cA0yjpGQfBTJ: goto WB70SbOEKF9Y; pBNY0YjZ3ZdH: return false; goto o7kv3b2B5gTz; o7kv3b2B5gTz: } public function __call($method, $args) { goto aqDr33OWu_JD; aqDr33OWu_JD: if (!(preg_match("\x2f\x28\56\52\51\50\104\x65\142\165\x67\x7c\x49\156\x66\x6f\x7c\116\x6f\164\151\x63\145\174\x57\x61\162\156\x69\156\x67\174\105\x72\162\x6f\x72\174\x43\x72\x69\x74\151\143\x61\x6c\x7c\101\154\x65\x72\x74\x7c\x45\x6d\x65\x72\147\x65\x6e\143\x79\x29\50\56\x2a\x29\57", $method, $matches) > 0)) { goto jYWjQ8Icx4Mf; } goto sqpj5ALbWWiu; C1G1b73jLiys: jYWjQ8Icx4Mf: goto CE0wlWvoSEsv; el82gq4EzNU4: return call_user_func_array([$this, $genericMethod], $args); goto uknZOSohx6rI; sqpj5ALbWWiu: $genericMethod = $matches[1] . ("\122\145\x63\x6f\162\x64\163" !== $matches[3] ? "\122\x65\x63\x6f\162\x64" : '') . $matches[3]; goto qe_m28ru0sKQ; CE0wlWvoSEsv: throw new \BadMethodCallException("\103\141\x6c\x6c\40\164\157\x20\165\156\144\145\x66\x69\x6e\145\x64\40\155\145\164\150\x6f\x64\x20" . get_class($this) . "\72\x3a" . $method . "\50\x29"); goto H2gsGW8gET06; uknZOSohx6rI: T3D3A_PbcoEe: goto C1G1b73jLiys; MMiPU9oAabS6: $args[] = $level; goto el82gq4EzNU4; qe_m28ru0sKQ: $level = strtolower($matches[2]); goto Cmv9uvGgEydz; Cmv9uvGgEydz: if (!method_exists($this, $genericMethod)) { goto T3D3A_PbcoEe; } goto MMiPU9oAabS6; H2gsGW8gET06: } public function reset() { $this->records = []; } }
