<?php
/* CbPlus */
/*

*/
 namespace Psr\Log\Test; use Psr\Log\LoggerInterface; use Psr\Log\LogLevel; abstract class LoggerInterfaceTest extends \PHPUnit_Framework_TestCase { public abstract function getLogger(); public abstract function getLogs(); public function testImplements() { $this->assertInstanceOf("\120\163\162\134\114\157\147\134\114\x6f\147\x67\x65\162\x49\x6e\x74\x65\162\146\141\x63\x65", $this->getLogger()); } public function testLogsAtAllLevels($level, $message) { goto r1zKGDTTON_0; aIF7cj6dDL61: $logger->{$level}($message, array("\x75\163\145\162" => "\102\157\142")); goto boI4ziMWfwsM; r1zKGDTTON_0: $logger = $this->getLogger(); goto aIF7cj6dDL61; boI4ziMWfwsM: $logger->log($level, $message, array("\x75\x73\x65\162" => "\102\x6f\x62")); goto LO30pK2qyeiq; LO30pK2qyeiq: $expected = array($level . "\40\x6d\x65\x73\163\141\x67\x65\40\x6f\x66\40\154\145\x76\x65\154\x20" . $level . "\x20\x77\151\x74\x68\40\143\157\156\164\145\x78\164\72\x20\102\157\x62", $level . "\x20\155\x65\x73\x73\141\x67\x65\40\157\x66\40\x6c\145\166\x65\154\x20" . $level . "\40\167\151\164\x68\x20\x63\x6f\x6e\164\x65\x78\x74\x3a\x20\102\x6f\x62"); goto GJf31YE0X13R; GJf31YE0X13R: $this->assertEquals($expected, $this->getLogs()); goto VDyQ06qQIB4e; VDyQ06qQIB4e: } public function provideLevelsAndMessages() { return array(LogLevel::EMERGENCY => array(LogLevel::EMERGENCY, "\155\x65\x73\x73\141\x67\145\40\157\146\40\x6c\x65\x76\145\x6c\40\145\155\x65\162\147\x65\156\143\x79\40\167\151\164\x68\x20\x63\157\156\164\x65\x78\x74\72\40\173\165\x73\x65\x72\175"), LogLevel::ALERT => array(LogLevel::ALERT, "\155\145\163\x73\141\x67\145\40\x6f\x66\40\x6c\x65\166\x65\154\x20\141\x6c\x65\162\164\40\167\x69\164\x68\x20\143\157\156\164\145\170\164\72\40\173\x75\163\145\x72\x7d"), LogLevel::CRITICAL => array(LogLevel::CRITICAL, "\155\x65\163\x73\x61\147\145\x20\x6f\146\x20\154\x65\166\145\x6c\x20\143\x72\x69\164\x69\x63\141\x6c\x20\167\x69\x74\x68\40\143\157\x6e\164\x65\170\164\72\40\173\x75\163\x65\162\175"), LogLevel::ERROR => array(LogLevel::ERROR, "\x6d\145\x73\x73\141\147\145\40\x6f\146\x20\x6c\x65\166\145\x6c\40\x65\162\162\x6f\x72\40\167\x69\x74\x68\x20\143\x6f\x6e\x74\x65\x78\164\72\x20\173\x75\x73\145\x72\x7d"), LogLevel::WARNING => array(LogLevel::WARNING, "\155\145\163\163\x61\x67\x65\x20\x6f\x66\x20\154\145\x76\x65\x6c\40\x77\141\x72\x6e\151\156\147\40\x77\151\164\150\40\x63\157\156\x74\145\x78\x74\72\40\x7b\x75\163\145\162\175"), LogLevel::NOTICE => array(LogLevel::NOTICE, "\x6d\x65\163\163\x61\147\145\40\157\x66\40\x6c\145\x76\145\154\x20\156\157\164\x69\x63\145\40\167\151\x74\x68\x20\143\157\156\x74\x65\x78\164\72\x20\173\165\x73\x65\x72\175"), LogLevel::INFO => array(LogLevel::INFO, "\x6d\x65\x73\163\x61\147\145\x20\x6f\146\x20\154\x65\166\145\154\x20\x69\x6e\x66\157\40\x77\x69\164\x68\x20\x63\157\x6e\164\x65\x78\164\x3a\x20\173\x75\163\145\162\175"), LogLevel::DEBUG => array(LogLevel::DEBUG, "\x6d\145\163\x73\141\147\145\40\x6f\146\40\x6c\145\x76\x65\154\x20\144\145\x62\x75\x67\40\x77\151\164\x68\40\143\x6f\156\164\x65\170\x74\72\x20\x7b\165\x73\x65\x72\x7d")); } public function testThrowsOnInvalidLevel() { $logger = $this->getLogger(); $logger->log("\151\x6e\x76\x61\x6c\151\144\40\154\145\x76\145\x6c", "\106\x6f\x6f"); } public function testContextReplacement() { goto MMv2pCNimz1Y; xBkvHJ1OmW2g: $logger->info("\x7b\x4d\145\163\x73\141\147\x65\40\x7b\x6e\x6f\x74\x68\151\156\147\x7d\40\173\x75\x73\x65\162\175\x20\x7b\146\157\x6f\56\142\141\x72\x7d\40\141\175", array("\165\163\145\x72" => "\102\x6f\x62", "\x66\157\157\x2e\142\x61\x72" => "\x42\x61\x72")); goto YpU40QlXU65Z; MMv2pCNimz1Y: $logger = $this->getLogger(); goto xBkvHJ1OmW2g; YpU40QlXU65Z: $expected = array("\x69\156\146\157\x20\173\x4d\x65\x73\x73\141\147\145\x20\x7b\x6e\157\x74\150\151\x6e\x67\175\x20\x42\x6f\x62\x20\x42\x61\162\x20\141\175"); goto SxaG475PXSyJ; SxaG475PXSyJ: $this->assertEquals($expected, $this->getLogs()); goto btOu1i4mAou_; btOu1i4mAou_: } public function testObjectCastToString() { goto MygapAgr_GHV; Iph8N0zUhbbP: $this->assertEquals($expected, $this->getLogs()); goto Z6fFPt0fk2dl; wKtvB2geWNqy: Y3LqvY0jNhqI: goto v6t_WEub0f4i; kEwRWwCASyUR: $dummy->expects($this->once())->method("\137\x5f\164\x6f\x53\164\x72\x69\156\x67")->will($this->returnValue("\104\125\x4d\x4d\131")); goto JSlXLkSmcBWV; JSlXLkSmcBWV: $this->getLogger()->warning($dummy); goto e6uqHm7xmAj3; e6uqHm7xmAj3: $expected = array("\167\141\x72\x6e\x69\x6e\x67\40\104\x55\115\x4d\x59"); goto Iph8N0zUhbbP; MygapAgr_GHV: if (method_exists($this, "\x63\162\145\141\x74\145\x50\x61\162\164\151\x61\154\115\x6f\x63\x6b")) { goto Y3LqvY0jNhqI; } goto no1ZljQewi3J; sri6kx4v3BXI: MizE0jDsGqre: goto kEwRWwCASyUR; no1ZljQewi3J: $dummy = $this->getMock("\120\x73\x72\x5c\114\157\x67\x5c\124\x65\x73\164\x5c\104\165\x6d\155\x79\124\145\x73\x74", array("\137\x5f\x74\157\x53\164\162\151\x6e\x67")); goto RmvS0ctJJvyv; v6t_WEub0f4i: $dummy = $this->createPartialMock("\120\x73\x72\134\x4c\x6f\147\134\x54\x65\x73\164\x5c\x44\x75\155\x6d\171\124\x65\x73\164", array("\x5f\137\164\157\x53\x74\x72\x69\x6e\x67")); goto sri6kx4v3BXI; RmvS0ctJJvyv: goto MizE0jDsGqre; goto wKtvB2geWNqy; Z6fFPt0fk2dl: } public function testContextCanContainAnything() { goto OUsOXUnOWNOi; OUsOXUnOWNOi: $closed = fopen("\x70\x68\x70\x3a\57\x2f\x6d\145\155\157\x72\171", "\162"); goto X9TQPDgB75zW; X9TQPDgB75zW: fclose($closed); goto O0He9WAi8teL; og5BeWJAabe9: $this->getLogger()->warning("\103\162\x61\x7a\x79\x20\x63\x6f\x6e\164\x65\170\x74\x20\x64\141\x74\x61", $context); goto po4_RDgqipjt; po4_RDgqipjt: $expected = array("\167\x61\162\156\x69\156\147\40\103\162\x61\172\x79\40\x63\x6f\x6e\x74\145\170\164\40\x64\141\164\141"); goto uJL3_7E1h1ET; uJL3_7E1h1ET: $this->assertEquals($expected, $this->getLogs()); goto Zy_QPzF6TBfQ; O0He9WAi8teL: $context = array("\142\157\x6f\154" => true, "\156\x75\x6c\x6c" => null, "\x73\164\x72\x69\x6e\x67" => "\106\157\x6f", "\x69\x6e\x74" => 0, "\x66\154\x6f\141\x74" => 0.5, "\156\145\163\164\145\x64" => array("\167\151\x74\x68\x20\157\142\152\145\x63\x74" => new DummyTest()), "\157\142\152\x65\x63\x74" => new \DateTime(), "\162\x65\x73\x6f\165\x72\143\145" => fopen("\160\150\160\x3a\x2f\x2f\x6d\145\x6d\157\162\x79", "\162"), "\143\154\157\163\145\x64" => $closed); goto og5BeWJAabe9; Zy_QPzF6TBfQ: } public function testContextExceptionKeyCanBeExceptionOrOtherValues() { goto tJHBugn4PGBX; nQfJv0av3Xzc: $logger->critical("\125\156\x63\x61\165\x67\x68\x74\x20\105\170\x63\x65\x70\x74\x69\157\x6e\41", array("\145\170\x63\145\160\x74\151\157\156" => new \LogicException("\x46\141\151\x6c"))); goto lXG3hUj68DTb; tJHBugn4PGBX: $logger = $this->getLogger(); goto rGJo1qVPjcY_; lXG3hUj68DTb: $expected = array("\x77\141\162\156\151\x6e\147\40\122\141\x6e\144\157\155\40\155\x65\x73\x73\x61\x67\x65", "\x63\x72\x69\x74\151\x63\x61\x6c\40\x55\x6e\143\141\165\147\x68\x74\x20\105\170\x63\145\x70\x74\151\157\x6e\41"); goto WIhflyCpho1C; rGJo1qVPjcY_: $logger->warning("\122\x61\156\144\x6f\x6d\x20\155\145\x73\163\141\x67\x65", array("\x65\x78\143\145\160\x74\x69\157\156" => "\x6f\157\160\163")); goto nQfJv0av3Xzc; WIhflyCpho1C: $this->assertEquals($expected, $this->getLogs()); goto qcNz64TDPl3a; qcNz64TDPl3a: } } class DummyTest { public function __toString() { } }
